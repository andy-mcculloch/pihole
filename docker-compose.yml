name: pihole
services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    hostname: pihole
    ports:
      - 53/tcp
      - 53/udp
      - 67/udp # Only required if you are using Pi-hole as your DHCP server
      - 80/tcp
    networks:
      # proxy:
      #   ipv4_address: ${DOCKER_IP}
      macvlan-system:
        ipv4_address: ${VLAN_IP}
    environment:
      TZ: UTC
      WEBPASSWORD: ${WEBPASSWORD}
      PIHOLE_DNS_: 9.9.9.9;149.112.112.112
      ServerIP: ${VLAN_IP}
      FTLCONF_REPLY_ADDR4: ${VLAN_IP}
      VIRTUAL_HOST: pihole.${DOMAIN}
      DHCP_ACTIVE: "false"
      DHCP_START: ${DHCP_START}
      DHCP_END: 1${DHCP_END}
      DHCP_ROUTER: 1${DHCP_ROUTER}
      PIHOLE_DOMAIN: ${DOMAIN}
    # Volumes store your data between container upgrades
    volumes:
      - ./etc-pihole:/etc/pihole
      - ./etc-dnsmasq.d:/etc/dnsmasq.d
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.pihole.rule=Host(`pihole.${DOMAIN}`)
      - traefik.http.services.pihole.loadbalancer.server.port=80
      - traefik.http.routers.pihole.entrypoints=websecure
      - traefik.http.routers.pihole.tls.certresolver=le_dns
    
##############################

networks:
  macvlan-system:
    external: true
  proxy:
    external: true

# volumes:
#   config:
#   dnsmasq:
#   tftp:
#   data:  
